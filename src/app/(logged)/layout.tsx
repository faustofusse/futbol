import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { NavBar } from "@/components/navbar";
import { db, groups, groups as groupsTable, groupUsers, matches } from "@/db";
import { getSession } from "@/lib/sessions";
import { and, isNull, eq, getTableColumns } from "drizzle-orm";
import { redirect } from "next/navigation";
import { getCurrentMatch } from "./groups/[groupId]/matches/actions";
// fausto re gay
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getSession();
  if (!session) redirect("/login");

  const groupsArray = await db
    .select({ ...getTableColumns(groupsTable) })
    .from(groups)
    .where(and(eq(groups.id, groupUsers.group), isNull(groups.deleted)))
    .leftJoin(groupUsers, eq(groupUsers.user, session.userId));

  const matchesArray = await db
    .select()
    .from(matches)
    .where(eq(matches.group, session.groupId));

  const currentMatch = await getCurrentMatch(
    session.groupId ?? 0,
    session.matchId ?? 0
  );
  return (
    <div className="min-w-[1000px]">
      <NavBar
        groups={groupsArray}
        matches={matchesArray}
        currentMatch={currentMatch?.match.id}
        currentGroup={session.groupId}
        userId={session.userId}
      />
      <main className="flex flex-col items-center mt-3">{children}</main>
    </div>
  );
}
